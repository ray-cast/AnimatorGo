#include <octoon/texture/texture_format.h>
#include <octoon/runtime/except.h>

namespace octoon
{
	std::uint8_t
	Format::channel() const except
	{
		return channel(format_);
	}

	std::uint8_t
	Format::type_size() const except
	{
		return type_size(format_);
	}

	value_t
	Format::value_type() const except
	{
		return value_type(format_);
	}

	swizzle_t
	Format::swizzle_type() const except
	{
		return swizzle_type(format_);
	}

	Format::Type
	Format::type() const noexcept
	{
		return format_;
	}

	swizzle_t
	Format::swizzle_type(Format::Type format) except
	{
		switch (format)
		{
		case Format::Type::R8UNorm:
		case Format::Type::R8SNorm:
		case Format::Type::R8UScaled:
		case Format::Type::R8SScaled:
		case Format::Type::R8UInt:
		case Format::Type::R8SInt:
		case Format::Type::R8SRGB:
		case Format::Type::R16UNorm:
		case Format::Type::R16SNorm:
		case Format::Type::R16UScaled:
		case Format::Type::R16SScaled:
		case Format::Type::R16UInt:
		case Format::Type::R16SInt:
		case Format::Type::R16SFloat:
		case Format::Type::R32UInt:
		case Format::Type::R32SInt:
		case Format::Type::R32SFloat:
		case Format::Type::R64UInt:
		case Format::Type::R64SInt:
		case Format::Type::R64SFloat:
			return swizzle_t::R;
		case Format::Type::R4G4UNormPack8:
		case Format::Type::R8G8UNorm:
		case Format::Type::R8G8SNorm:
		case Format::Type::R8G8UScaled:
		case Format::Type::R8G8SScaled:
		case Format::Type::R8G8UInt:
		case Format::Type::R8G8SInt:
		case Format::Type::R8G8SRGB:
		case Format::Type::R16G16UNorm:
		case Format::Type::R16G16SNorm:
		case Format::Type::R16G16UScaled:
		case Format::Type::R16G16SScaled:
		case Format::Type::R16G16UInt:
		case Format::Type::R16G16SInt:
		case Format::Type::R16G16SFloat:
		case Format::Type::R32G32UInt:
		case Format::Type::R32G32SInt:
		case Format::Type::R32G32SFloat:
		case Format::Type::R64G64UInt:
		case Format::Type::R64G64SInt:
		case Format::Type::R64G64SFloat:
			return swizzle_t::RG;
		case Format::Type::R5G6B5UNormPack16:
		case Format::Type::R8G8B8UNorm:
		case Format::Type::R8G8B8SNorm:
		case Format::Type::R8G8B8UScaled:
		case Format::Type::R8G8B8SScaled:
		case Format::Type::R8G8B8UInt:
		case Format::Type::R8G8B8SInt:
		case Format::Type::R8G8B8SRGB:
		case Format::Type::R16G16B16UNorm:
		case Format::Type::R16G16B16SNorm:
		case Format::Type::R16G16B16UScaled:
		case Format::Type::R16G16B16SScaled:
		case Format::Type::R16G16B16UInt:
		case Format::Type::R16G16B16SInt:
		case Format::Type::R16G16B16SFloat:
		case Format::Type::R32G32B32UInt:
		case Format::Type::R32G32B32SInt:
		case Format::Type::R32G32B32SFloat:
		case Format::Type::R64G64B64UInt:
		case Format::Type::R64G64B64SInt:
		case Format::Type::R64G64B64SFloat:
			return swizzle_t::RGB;
		case Format::Type::B5G6R5UNormPack16:
		case Format::Type::B8G8R8UNorm:
		case Format::Type::B8G8R8SNorm:
		case Format::Type::B8G8R8UScaled:
		case Format::Type::B8G8R8SScaled:
		case Format::Type::B8G8R8UInt:
		case Format::Type::B8G8R8SInt:
		case Format::Type::B8G8R8SRGB:
		case Format::Type::B10G11R11UFloatPack32:
			return swizzle_t::BGR;
		case Format::Type::R4G4B4A4UNormPack16:
		case Format::Type::R5G5B5A1UNormPack16:
		case Format::Type::A1R5G5B5UNormPack16:
		case Format::Type::R8G8B8A8UNorm:
		case Format::Type::R8G8B8A8SNorm:
		case Format::Type::R8G8B8A8UScaled:
		case Format::Type::R8G8B8A8SScaled:
		case Format::Type::R8G8B8A8UInt:
		case Format::Type::R8G8B8A8SInt:
		case Format::Type::R8G8B8A8SRGB:
		case Format::Type::A2R10G10B10UNormPack32:
		case Format::Type::A2R10G10B10SNormPack32:
		case Format::Type::A2R10G10B10UScaledPack32:
		case Format::Type::A2R10G10B10SScaledPack32:
		case Format::Type::A2R10G10B10UIntPack32:
		case Format::Type::A2R10G10B10SIntPack32:
		case Format::Type::R16G16B16A16UNorm:
		case Format::Type::R16G16B16A16SNorm:
		case Format::Type::R16G16B16A16UScaled:
		case Format::Type::R16G16B16A16SScaled:
		case Format::Type::R16G16B16A16UInt:
		case Format::Type::R16G16B16A16SInt:
		case Format::Type::R16G16B16A16SFloat:
		case Format::Type::R32G32B32A32UInt:
		case Format::Type::R32G32B32A32SInt:
		case Format::Type::R32G32B32A32SFloat:
		case Format::Type::R64G64B64A64UInt:
		case Format::Type::R64G64B64A64SInt:
		case Format::Type::R64G64B64A64SFloat:
			return swizzle_t::RGBA;
		case Format::Type::B4G4R4A4UNormPack16:
		case Format::Type::B5G5R5A1UNormPack16:
		case Format::Type::B8G8R8A8UNorm:
		case Format::Type::B8G8R8A8SNorm:
		case Format::Type::B8G8R8A8UScaled:
		case Format::Type::B8G8R8A8SScaled:
		case Format::Type::B8G8R8A8UInt:
		case Format::Type::B8G8R8A8SInt:
		case Format::Type::B8G8R8A8SRGB:
		case Format::Type::A2B10G10R10UNormPack32:
		case Format::Type::A2B10G10R10SNormPack32:
		case Format::Type::A2B10G10R10UScaledPack32:
		case Format::Type::A2B10G10R10SScaledPack32:
		case Format::Type::A2B10G10R10UIntPack32:
		case Format::Type::A2B10G10R10SIntPack32:
			return swizzle_t::BGRA;
		case Format::Type::A8B8G8R8UNormPack32:
		case Format::Type::A8B8G8R8SNormPack32:
		case Format::Type::A8B8G8R8UScaledPack32:
		case Format::Type::A8B8G8R8SScaledPack32:
		case Format::Type::A8B8G8R8UIntPack32:
		case Format::Type::A8B8G8R8SIntPack32:
		case Format::Type::A8B8G8R8SRGBPack32:
			return swizzle_t::ABGR;
		case Format::Type::D16UNorm:
		case Format::Type::X8_D24UNormPack32:
		case Format::Type::D32_SFLOAT:
			return swizzle_t::Depth;
		case Format::Type::S8UInt:
			return swizzle_t::Stencil;
		case Format::Type::D16UNorm_S8UInt:
		case Format::Type::D24UNorm_S8UInt:
		case Format::Type::D32_SFLOAT_S8UInt:
			return swizzle_t::DepthStencil;
		default:
			throw type_error::create("invalid enum after call swizzle_type()");
		}
	}

	value_t
	Format::value_type(Format::Type format) except
	{
		switch (format)
		{
		case Format::Type::R4G4UNormPack8:
		case Format::Type::R4G4B4A4UNormPack16:
		case Format::Type::B4G4R4A4UNormPack16:
		case Format::Type::L8UNorm:
		case Format::Type::A8UNorm:
		case Format::Type::R8UNorm:
		case Format::Type::L8A8UNorm:
		case Format::Type::R8G8UNorm:
		case Format::Type::R8G8B8UNorm:
		case Format::Type::B8G8R8UNorm:
		case Format::Type::R8G8B8A8UNorm:
		case Format::Type::B8G8R8A8UNorm:
		case Format::Type::A8B8G8R8UNormPack32:
		case Format::Type::L16UNorm:
		case Format::Type::A16UNorm:
		case Format::Type::R16UNorm:
		case Format::Type::L16A16UNorm:
		case Format::Type::R16G16UNorm:
		case Format::Type::R16G16B16UNorm:
		case Format::Type::R16G16B16A16UNorm:
		case Format::Type::D16UNorm:
			return value_t::UNorm;
		case Format::Type::R5G6B5UNormPack16:
		case Format::Type::B5G6R5UNormPack16:
			return value_t::UNorm5_6_5;
		case Format::Type::R5G5B5A1UNormPack16:
		case Format::Type::B5G5R5A1UNormPack16:
			return value_t::UNorm5_5_5_1;
		case Format::Type::A1R5G5B5UNormPack16:
			return value_t::UNorm1_5_5_5;
		case Format::Type::B10G11R11UFloatPack32:
			return value_t::UFloatB10G11R11Pack32;
		case Format::Type::E5B9G9R9UFloatPack32:
			return value_t::UFloatE5B9G9R9Pack32;
		case Format::Type::L8SNorm:
		case Format::Type::A8SNorm:
		case Format::Type::R8SNorm:
		case Format::Type::L8A8SNorm:
		case Format::Type::R8G8SNorm:
		case Format::Type::R8G8B8SNorm:
		case Format::Type::B8G8R8SNorm:
		case Format::Type::R8G8B8A8SNorm:
		case Format::Type::B8G8R8A8SNorm:
		case Format::Type::A8B8G8R8SNormPack32:
		case Format::Type::L16SNorm:
		case Format::Type::A16SNorm:
		case Format::Type::R16SNorm:
		case Format::Type::L16A16SNorm:
		case Format::Type::R16G16SNorm:
		case Format::Type::R16G16B16SNorm:
		case Format::Type::R16G16B16A16SNorm:
			return value_t::SNorm;
		case Format::Type::A2R10G10B10UNormPack32:
		case Format::Type::A2B10G10R10UNormPack32:
		case Format::Type::A2R10G10B10SNormPack32:
		case Format::Type::A2B10G10R10SNormPack32:
			return value_t::UNorm2_10_10_10;
		case Format::Type::X8_D24UNormPack32:
			return value_t::D24UNormPack32;
		case Format::Type::D16UNorm_S8UInt:
			return value_t::D16UNorm_S8UInt;
		case Format::Type::D24UNorm_S8UInt:
			return value_t::D24UNorm_S8UInt;
		case Format::Type::D32_SFLOAT_S8UInt:
			return value_t::D32_SFLOAT_S8UInt;
		case Format::Type::L8UScaled:
		case Format::Type::A8UScaled:
		case Format::Type::R8UScaled:
		case Format::Type::L8A8UScaled:
		case Format::Type::R8G8UScaled:
		case Format::Type::R8G8B8UScaled:
		case Format::Type::B8G8R8UScaled:
		case Format::Type::R8G8B8A8UScaled:
		case Format::Type::B8G8R8A8UScaled:
		case Format::Type::A8B8G8R8UScaledPack32:
		case Format::Type::A2R10G10B10UScaledPack32:
		case Format::Type::A2B10G10R10UScaledPack32:
		case Format::Type::L16UScaled:
		case Format::Type::A16UScaled:
		case Format::Type::R16UScaled:
		case Format::Type::L16A16UScaled:
		case Format::Type::R16G16UScaled:
		case Format::Type::R16G16B16UScaled:
		case Format::Type::R16G16B16A16UScaled:
		case Format::Type::L8SScaled:
		case Format::Type::A8SScaled:
		case Format::Type::R8SScaled:
		case Format::Type::L8A8SScaled:
		case Format::Type::R8G8SScaled:
		case Format::Type::R8G8B8SScaled:
		case Format::Type::B8G8R8SScaled:
		case Format::Type::R8G8B8A8SScaled:
		case Format::Type::B8G8R8A8SScaled:
		case Format::Type::A8B8G8R8SScaledPack32:
		case Format::Type::A2R10G10B10SScaledPack32:
		case Format::Type::A2B10G10R10SScaledPack32:
		case Format::Type::L16SScaled:
		case Format::Type::A16SScaled:
		case Format::Type::R16SScaled:
		case Format::Type::L16A16SScaled:
		case Format::Type::R16G16SScaled:
		case Format::Type::R16G16B16SScaled:
		case Format::Type::R16G16B16A16SScaled:
			return value_t::UScaled;
		case Format::Type::L8UInt:
		case Format::Type::A8UInt:
		case Format::Type::R8UInt:
		case Format::Type::L8A8UInt:
		case Format::Type::R8G8UInt:
		case Format::Type::R8G8B8UInt:
		case Format::Type::B8G8R8UInt:
		case Format::Type::R8G8B8A8UInt:
		case Format::Type::B8G8R8A8UInt:
		case Format::Type::A8B8G8R8UIntPack32:
		case Format::Type::A2R10G10B10UIntPack32:
		case Format::Type::A2B10G10R10UIntPack32:
		case Format::Type::L16UInt:
		case Format::Type::A16UInt:
		case Format::Type::R16UInt:
		case Format::Type::L16A16UInt:
		case Format::Type::R16G16UInt:
		case Format::Type::R16G16B16UInt:
		case Format::Type::R16G16B16A16UInt:
		case Format::Type::R32UInt:
		case Format::Type::R32G32UInt:
		case Format::Type::R32G32B32UInt:
		case Format::Type::R32G32B32A32UInt:
		case Format::Type::R64UInt:
		case Format::Type::R64G64UInt:
		case Format::Type::R64G64B64UInt:
		case Format::Type::R64G64B64A64UInt:
		case Format::Type::S8UInt:
			return value_t::UInt;
		case Format::Type::L8SRGB:
		case Format::Type::A8SRGB:
		case Format::Type::R8SRGB:
		case Format::Type::L8A8SRGB:
		case Format::Type::R8G8SRGB:
		case Format::Type::R8G8B8SRGB:
		case Format::Type::B8G8R8SRGB:
		case Format::Type::R8G8B8A8SRGB:
		case Format::Type::B8G8R8A8SRGB:
		case Format::Type::A8B8G8R8SRGBPack32:
		case Format::Type::L16A16SRGB:
			return value_t::SRGB;
		case Format::Type::L8SInt:
		case Format::Type::A8SInt:
		case Format::Type::R8SInt:
		case Format::Type::L8A8SInt:
		case Format::Type::R8G8SInt:
		case Format::Type::R8G8B8SInt:
		case Format::Type::B8G8R8SInt:
		case Format::Type::R8G8B8A8SInt:
		case Format::Type::B8G8R8A8SInt:
		case Format::Type::A8B8G8R8SIntPack32:
		case Format::Type::A2R10G10B10SIntPack32:
		case Format::Type::A2B10G10R10SIntPack32:
		case Format::Type::L16SInt:
		case Format::Type::A16SInt:
		case Format::Type::R16SInt:
		case Format::Type::L16A16SInt:
		case Format::Type::R16G16SInt:
		case Format::Type::R16G16B16SInt:
		case Format::Type::R16G16B16A16SInt:
		case Format::Type::R32SInt:
		case Format::Type::R32G32SInt:
		case Format::Type::R32G32B32SInt:
		case Format::Type::R32G32B32A32SInt:
		case Format::Type::R64SInt:
		case Format::Type::R64G64SInt:
		case Format::Type::R64G64B64SInt:
		case Format::Type::R64G64B64A64SInt:
			return value_t::SInt;
		case Format::Type::L16SFloat:
		case Format::Type::A16SFloat:
		case Format::Type::R16SFloat:
		case Format::Type::R16G16SFloat:
		case Format::Type::R16G16B16SFloat:
		case Format::Type::R16G16B16A16SFloat:
		case Format::Type::R32SFloat:
		case Format::Type::R32G32SFloat:
		case Format::Type::R32G32B32SFloat:
		case Format::Type::R32G32B32A32SFloat:
		case Format::Type::R64SFloat:
		case Format::Type::R64G64SFloat:
		case Format::Type::R64G64B64SFloat:
		case Format::Type::R64G64B64A64SFloat:
		case Format::Type::D32_SFLOAT:
			return value_t::Float;
		case Format::Type::BC1RGBUNormBlock:
		case Format::Type::BC1RGBAUNormBlock:
		case Format::Type::BC1RGBSRGBBlock:
		case Format::Type::BC1RGBASRGBBlock:
		case Format::Type::BC2UNormBlock:
		case Format::Type::BC3UNormBlock:
		case Format::Type::BC4UNormBlock:
		case Format::Type::BC4SNormBlock:
		case Format::Type::BC5UNormBlock:
		case Format::Type::BC5SNormBlock:
		case Format::Type::BC6HSFloatBlock:
		case Format::Type::BC7UNormBlock:
		case Format::Type::ETC2R8G8B8UNormBlock:
		case Format::Type::ETC2R8G8B8A1UNormBlock:
		case Format::Type::ETC2R8G8B8A8UNormBlock:
		case Format::Type::EACR11UNormBlock:
		case Format::Type::EACR11G11UNormBlock:
		case Format::Type::EACR11SNormBlock:
		case Format::Type::EACR11G11SNormBlock:
		case Format::Type::ASTC4x4UNormBlock:
		case Format::Type::ASTC5x4UNormBlock:
		case Format::Type::ASTC5x5UNormBlock:
		case Format::Type::ASTC6x5UNormBlock:
		case Format::Type::ASTC6x6UNormBlock:
		case Format::Type::ASTC8x5UNormBlock:
		case Format::Type::ASTC8x6UNormBlock:
		case Format::Type::ASTC8x8UNormBlock:
		case Format::Type::ASTC10x5UNormBlock:
		case Format::Type::ASTC10x6UNormBlock:
		case Format::Type::ASTC10x8UNormBlock:
		case Format::Type::ASTC10x10UNormBlock:
		case Format::Type::ASTC12x10UNormBlock:
		case Format::Type::ASTC12x12UNormBlock:
		case Format::Type::BC2SRGBBlock:
		case Format::Type::BC3SRGBBlock:
		case Format::Type::BC6HUFloatBlock:
		case Format::Type::BC7SRGBBlock:
		case Format::Type::ETC2R8G8B8SRGBBlock:
		case Format::Type::ETC2R8G8B8A1SRGBBlock:
		case Format::Type::ETC2R8G8B8A8SRGBBlock:
		case Format::Type::ASTC4x4SRGBBlock:
		case Format::Type::ASTC5x4SRGBBlock:
		case Format::Type::ASTC5x5SRGBBlock:
		case Format::Type::ASTC6x5SRGBBlock:
		case Format::Type::ASTC6x6SRGBBlock:
		case Format::Type::ASTC8x5SRGBBlock:
		case Format::Type::ASTC8x6SRGBBlock:
		case Format::Type::ASTC8x8SRGBBlock:
		case Format::Type::ASTC10x5SRGBBlock:
		case Format::Type::ASTC10x6SRGBBlock:
		case Format::Type::ASTC10x8SRGBBlock:
		case Format::Type::ASTC10x10SRGBBlock:
		case Format::Type::ASTC12x10SRGBBlock:
		case Format::Type::ASTC12x12SRGBBlock:
			return value_t::Compressed;
		default:
			throw type_error::create("invalid enum after call value_type()");
		}
	}

	std::uint8_t
	Format::type_size(Format::Type format) except
	{
		switch (format)
		{
		case Format::Type::R4G4UNormPack8:
		case Format::Type::R5G6B5UNormPack16:
		case Format::Type::B5G6R5UNormPack16:
		case Format::Type::L8UNorm:
		case Format::Type::L8SNorm:
		case Format::Type::L8UScaled:
		case Format::Type::L8SScaled:
		case Format::Type::L8UInt:
		case Format::Type::L8SInt:
		case Format::Type::L8SRGB:
		case Format::Type::A8UNorm:
		case Format::Type::A8SNorm:
		case Format::Type::A8UScaled:
		case Format::Type::A8SScaled:
		case Format::Type::A8UInt:
		case Format::Type::A8SInt:
		case Format::Type::A8SRGB:
		case Format::Type::R8UNorm:
		case Format::Type::R8SNorm:
		case Format::Type::R8UScaled:
		case Format::Type::R8SScaled:
		case Format::Type::R8UInt:
		case Format::Type::R8SInt:
		case Format::Type::R8SRGB:
		case Format::Type::S8UInt:
		case Format::Type::L8A8UNorm:
		case Format::Type::L8A8SNorm:
		case Format::Type::L8A8UScaled:
		case Format::Type::L8A8SScaled:
		case Format::Type::L8A8UInt:
		case Format::Type::L8A8SInt:
		case Format::Type::L8A8SRGB:
		case Format::Type::R8G8UNorm:
		case Format::Type::R8G8SNorm:
		case Format::Type::R8G8UScaled:
		case Format::Type::R8G8SScaled:
		case Format::Type::R8G8UInt:
		case Format::Type::R8G8SInt:
		case Format::Type::R8G8SRGB:
		case Format::Type::R8G8B8UNorm:
		case Format::Type::R8G8B8SNorm:
		case Format::Type::R8G8B8UScaled:
		case Format::Type::R8G8B8SScaled:
		case Format::Type::R8G8B8UInt:
		case Format::Type::R8G8B8SInt:
		case Format::Type::R8G8B8SRGB:
		case Format::Type::B8G8R8UNorm:
		case Format::Type::B8G8R8SNorm:
		case Format::Type::B8G8R8UScaled:
		case Format::Type::B8G8R8SScaled:
		case Format::Type::B8G8R8UInt:
		case Format::Type::B8G8R8SInt:
		case Format::Type::B8G8R8SRGB:
		case Format::Type::R8G8B8A8UNorm:
		case Format::Type::R8G8B8A8SNorm:
		case Format::Type::R8G8B8A8UScaled:
		case Format::Type::R8G8B8A8SScaled:
		case Format::Type::R8G8B8A8UInt:
		case Format::Type::R8G8B8A8SInt:
		case Format::Type::R8G8B8A8SRGB:
		case Format::Type::B8G8R8A8UNorm:
		case Format::Type::B8G8R8A8SNorm:
		case Format::Type::B8G8R8A8UScaled:
		case Format::Type::B8G8R8A8SScaled:
		case Format::Type::B8G8R8A8UInt:
		case Format::Type::B8G8R8A8SInt:
		case Format::Type::B8G8R8A8SRGB:
		case Format::Type::A8B8G8R8UNormPack32:
		case Format::Type::A8B8G8R8SNormPack32:
		case Format::Type::A8B8G8R8UScaledPack32:
		case Format::Type::A8B8G8R8SScaledPack32:
		case Format::Type::A8B8G8R8UIntPack32:
		case Format::Type::A8B8G8R8SIntPack32:
		case Format::Type::A8B8G8R8SRGBPack32:
			return 1;
		case Format::Type::L16UNorm:
		case Format::Type::L16SNorm:
		case Format::Type::L16UScaled:
		case Format::Type::L16SScaled:
		case Format::Type::L16UInt:
		case Format::Type::L16SInt:
		case Format::Type::L16SFloat:
		case Format::Type::A16UNorm:
		case Format::Type::A16SNorm:
		case Format::Type::A16UScaled:
		case Format::Type::A16SScaled:
		case Format::Type::A16UInt:
		case Format::Type::A16SInt:
		case Format::Type::A16SFloat:
		case Format::Type::R16UNorm:
		case Format::Type::R16SNorm:
		case Format::Type::R16UScaled:
		case Format::Type::R16SScaled:
		case Format::Type::R16UInt:
		case Format::Type::R16SInt:
		case Format::Type::R16SFloat:
		case Format::Type::D16UNorm:
		case Format::Type::L16A16UNorm:
		case Format::Type::L16A16SNorm:
		case Format::Type::L16A16UScaled:
		case Format::Type::L16A16SScaled:
		case Format::Type::L16A16UInt:
		case Format::Type::L16A16SInt:
		case Format::Type::L16A16SRGB:
		case Format::Type::R16G16UNorm:
		case Format::Type::R16G16SNorm:
		case Format::Type::R16G16UScaled:
		case Format::Type::R16G16SScaled:
		case Format::Type::R16G16UInt:
		case Format::Type::R16G16SInt:
		case Format::Type::R16G16SFloat:
		case Format::Type::R16G16B16UNorm:
		case Format::Type::R16G16B16SNorm:
		case Format::Type::R16G16B16UScaled:
		case Format::Type::R16G16B16SScaled:
		case Format::Type::R16G16B16UInt:
		case Format::Type::R16G16B16SInt:
		case Format::Type::R16G16B16SFloat:
		case Format::Type::R16G16B16A16UNorm:
		case Format::Type::R16G16B16A16SNorm:
		case Format::Type::R16G16B16A16UScaled:
		case Format::Type::R16G16B16A16SScaled:
		case Format::Type::R16G16B16A16UInt:
		case Format::Type::R16G16B16A16SInt:
		case Format::Type::R16G16B16A16SFloat:
			return 2;
		case Format::Type::R32UInt:
		case Format::Type::R32SInt:
		case Format::Type::R32SFloat:
		case Format::Type::R32G32UInt:
		case Format::Type::R32G32SInt:
		case Format::Type::R32G32SFloat:
		case Format::Type::R32G32B32UInt:
		case Format::Type::R32G32B32SInt:
		case Format::Type::R32G32B32SFloat:
		case Format::Type::R32G32B32A32UInt:
		case Format::Type::R32G32B32A32SInt:
		case Format::Type::R32G32B32A32SFloat:
			return 4;
		case Format::Type::R64UInt:
		case Format::Type::R64SInt:
		case Format::Type::R64SFloat:
		case Format::Type::R64G64UInt:
		case Format::Type::R64G64SInt:
		case Format::Type::R64G64SFloat:
		case Format::Type::R64G64B64UInt:
		case Format::Type::R64G64B64SInt:
		case Format::Type::R64G64B64SFloat:
		case Format::Type::R64G64B64A64UInt:
		case Format::Type::R64G64B64A64SInt:
		case Format::Type::R64G64B64A64SFloat:
			return 8;
		case Format::Type::R4G4B4A4UNormPack16:
		case Format::Type::B4G4R4A4UNormPack16:
		case Format::Type::R5G5B5A1UNormPack16:
		case Format::Type::B5G5R5A1UNormPack16:
		case Format::Type::A1R5G5B5UNormPack16:
		case Format::Type::X8_D24UNormPack32:
		case Format::Type::D16UNorm_S8UInt:
		case Format::Type::D24UNorm_S8UInt:
		case Format::Type::D32_SFLOAT:
		case Format::Type::D32_SFLOAT_S8UInt:
		case Format::Type::B10G11R11UFloatPack32:
		case Format::Type::E5B9G9R9UFloatPack32:
		case Format::Type::A2R10G10B10UNormPack32:
		case Format::Type::A2R10G10B10SNormPack32:
		case Format::Type::A2R10G10B10UScaledPack32:
		case Format::Type::A2R10G10B10SScaledPack32:
		case Format::Type::A2R10G10B10UIntPack32:
		case Format::Type::A2R10G10B10SIntPack32:
		case Format::Type::A2B10G10R10UNormPack32:
		case Format::Type::A2B10G10R10SNormPack32:
		case Format::Type::A2B10G10R10UScaledPack32:
		case Format::Type::A2B10G10R10SScaledPack32:
		case Format::Type::A2B10G10R10UIntPack32:
		case Format::Type::A2B10G10R10SIntPack32:
		case Format::Type::BC1RGBUNormBlock:
		case Format::Type::BC1RGBSRGBBlock:
		case Format::Type::BC1RGBAUNormBlock:
		case Format::Type::BC1RGBASRGBBlock:
		case Format::Type::BC2UNormBlock:
		case Format::Type::BC2SRGBBlock:
		case Format::Type::BC3UNormBlock:
		case Format::Type::BC3SRGBBlock:
		case Format::Type::BC4UNormBlock:
		case Format::Type::BC4SNormBlock:
		case Format::Type::BC5UNormBlock:
		case Format::Type::BC5SNormBlock:
		case Format::Type::BC6HUFloatBlock:
		case Format::Type::BC6HSFloatBlock:
		case Format::Type::BC7UNormBlock:
		case Format::Type::BC7SRGBBlock:
		case Format::Type::ETC2R8G8B8UNormBlock:
		case Format::Type::ETC2R8G8B8SRGBBlock:
		case Format::Type::ETC2R8G8B8A1UNormBlock:
		case Format::Type::ETC2R8G8B8A1SRGBBlock:
		case Format::Type::ETC2R8G8B8A8UNormBlock:
		case Format::Type::ETC2R8G8B8A8SRGBBlock:
		case Format::Type::EACR11UNormBlock:
		case Format::Type::EACR11SNormBlock:
		case Format::Type::EACR11G11UNormBlock:
		case Format::Type::EACR11G11SNormBlock:
		case Format::Type::ASTC4x4UNormBlock:
		case Format::Type::ASTC4x4SRGBBlock:
		case Format::Type::ASTC5x4UNormBlock:
		case Format::Type::ASTC5x4SRGBBlock:
		case Format::Type::ASTC5x5UNormBlock:
		case Format::Type::ASTC5x5SRGBBlock:
		case Format::Type::ASTC6x5UNormBlock:
		case Format::Type::ASTC6x5SRGBBlock:
		case Format::Type::ASTC6x6UNormBlock:
		case Format::Type::ASTC6x6SRGBBlock:
		case Format::Type::ASTC8x5UNormBlock:
		case Format::Type::ASTC8x5SRGBBlock:
		case Format::Type::ASTC8x6UNormBlock:
		case Format::Type::ASTC8x6SRGBBlock:
		case Format::Type::ASTC8x8UNormBlock:
		case Format::Type::ASTC8x8SRGBBlock:
		case Format::Type::ASTC10x5UNormBlock:
		case Format::Type::ASTC10x5SRGBBlock:
		case Format::Type::ASTC10x6UNormBlock:
		case Format::Type::ASTC10x6SRGBBlock:
		case Format::Type::ASTC10x8UNormBlock:
		case Format::Type::ASTC10x8SRGBBlock:
		case Format::Type::ASTC10x10UNormBlock:
		case Format::Type::ASTC10x10SRGBBlock:
		case Format::Type::ASTC12x10UNormBlock:
		case Format::Type::ASTC12x10SRGBBlock:
		case Format::Type::ASTC12x12UNormBlock:
		case Format::Type::ASTC12x12SRGBBlock:
		default:
			throw type_error::create("invalid enum after call type_size()");
		}
	}

	std::uint8_t
	Format::channel(Format::Type format) except
	{
		switch (format)
		{
		case Format::Type::L8UNorm:
		case Format::Type::L8SNorm:
		case Format::Type::L8UScaled:
		case Format::Type::L8SScaled:
		case Format::Type::L8UInt:
		case Format::Type::L8SInt:
		case Format::Type::L8SRGB:
		case Format::Type::A8UNorm:
		case Format::Type::A8SNorm:
		case Format::Type::A8UScaled:
		case Format::Type::A8SScaled:
		case Format::Type::A8UInt:
		case Format::Type::A8SInt:
		case Format::Type::A8SRGB:
		case Format::Type::R8UNorm:
		case Format::Type::R8SNorm:
		case Format::Type::R8UScaled:
		case Format::Type::R8SScaled:
		case Format::Type::R8UInt:
		case Format::Type::R8SInt:
		case Format::Type::R8SRGB:
		case Format::Type::L16UNorm:
		case Format::Type::L16SNorm:
		case Format::Type::L16UScaled:
		case Format::Type::L16SScaled:
		case Format::Type::L16UInt:
		case Format::Type::L16SInt:
		case Format::Type::L16SFloat:
		case Format::Type::A16UNorm:
		case Format::Type::A16SNorm:
		case Format::Type::A16UScaled:
		case Format::Type::A16SScaled:
		case Format::Type::A16UInt:
		case Format::Type::A16SInt:
		case Format::Type::A16SFloat:
		case Format::Type::R16UNorm:
		case Format::Type::R16SNorm:
		case Format::Type::R16UScaled:
		case Format::Type::R16SScaled:
		case Format::Type::R16UInt:
		case Format::Type::R16SInt:
		case Format::Type::R16SFloat:
		case Format::Type::R32UInt:
		case Format::Type::R32SInt:
		case Format::Type::R32SFloat:
		case Format::Type::R64UInt:
		case Format::Type::R64SInt:
		case Format::Type::R64SFloat:
		case Format::Type::X8_D24UNormPack32:
		case Format::Type::D16UNorm:
		case Format::Type::D32_SFLOAT:
		case Format::Type::S8UInt:
		case Format::Type::D32_SFLOAT_S8UInt:
			return 1;
		case Format::Type::R4G4UNormPack8:
		case Format::Type::L8A8UNorm:
		case Format::Type::L8A8SNorm:
		case Format::Type::L8A8UScaled:
		case Format::Type::L8A8SScaled:
		case Format::Type::L8A8UInt:
		case Format::Type::L8A8SInt:
		case Format::Type::L8A8SRGB:
		case Format::Type::R8G8UNorm:
		case Format::Type::R8G8SNorm:
		case Format::Type::R8G8UScaled:
		case Format::Type::R8G8SScaled:
		case Format::Type::R8G8UInt:
		case Format::Type::R8G8SInt:
		case Format::Type::R8G8SRGB:
		case Format::Type::L16A16UNorm:
		case Format::Type::L16A16SNorm:
		case Format::Type::L16A16UScaled:
		case Format::Type::L16A16SScaled:
		case Format::Type::L16A16UInt:
		case Format::Type::L16A16SInt:
		case Format::Type::L16A16SRGB:
		case Format::Type::R16G16UNorm:
		case Format::Type::R16G16SNorm:
		case Format::Type::R16G16UScaled:
		case Format::Type::R16G16SScaled:
		case Format::Type::R16G16UInt:
		case Format::Type::R16G16SInt:
		case Format::Type::R16G16SFloat:
		case Format::Type::R32G32UInt:
		case Format::Type::R32G32SInt:
		case Format::Type::R32G32SFloat:
		case Format::Type::R64G64UInt:
		case Format::Type::R64G64SInt:
		case Format::Type::R64G64SFloat:
		case Format::Type::D16UNorm_S8UInt:
		case Format::Type::D24UNorm_S8UInt:
			return 2;
		case Format::Type::R5G6B5UNormPack16:
		case Format::Type::B5G6R5UNormPack16:
		case Format::Type::R8G8B8UNorm:
		case Format::Type::R8G8B8SNorm:
		case Format::Type::R8G8B8UScaled:
		case Format::Type::R8G8B8SScaled:
		case Format::Type::R8G8B8UInt:
		case Format::Type::R8G8B8SInt:
		case Format::Type::R8G8B8SRGB:
		case Format::Type::B8G8R8UNorm:
		case Format::Type::B8G8R8SNorm:
		case Format::Type::B8G8R8UScaled:
		case Format::Type::B8G8R8SScaled:
		case Format::Type::B8G8R8UInt:
		case Format::Type::B8G8R8SInt:
		case Format::Type::B8G8R8SRGB:
		case Format::Type::R16G16B16UNorm:
		case Format::Type::R16G16B16SNorm:
		case Format::Type::R16G16B16UScaled:
		case Format::Type::R16G16B16SScaled:
		case Format::Type::R16G16B16UInt:
		case Format::Type::R16G16B16SInt:
		case Format::Type::R16G16B16SFloat:
		case Format::Type::R32G32B32UInt:
		case Format::Type::R32G32B32SInt:
		case Format::Type::R32G32B32SFloat:
		case Format::Type::R64G64B64UInt:
		case Format::Type::R64G64B64SInt:
		case Format::Type::R64G64B64SFloat:
		case Format::Type::B10G11R11UFloatPack32:
		case Format::Type::E5B9G9R9UFloatPack32:
			return 3;
		case Format::Type::R4G4B4A4UNormPack16:
		case Format::Type::B4G4R4A4UNormPack16:
		case Format::Type::R5G5B5A1UNormPack16:
		case Format::Type::B5G5R5A1UNormPack16:
		case Format::Type::A1R5G5B5UNormPack16:
		case Format::Type::R8G8B8A8UNorm:
		case Format::Type::R8G8B8A8SNorm:
		case Format::Type::R8G8B8A8UScaled:
		case Format::Type::R8G8B8A8SScaled:
		case Format::Type::R8G8B8A8UInt:
		case Format::Type::R8G8B8A8SInt:
		case Format::Type::R8G8B8A8SRGB:
		case Format::Type::B8G8R8A8UNorm:
		case Format::Type::B8G8R8A8SNorm:
		case Format::Type::B8G8R8A8UScaled:
		case Format::Type::B8G8R8A8SScaled:
		case Format::Type::B8G8R8A8UInt:
		case Format::Type::B8G8R8A8SInt:
		case Format::Type::B8G8R8A8SRGB:
		case Format::Type::A8B8G8R8UNormPack32:
		case Format::Type::A8B8G8R8SNormPack32:
		case Format::Type::A8B8G8R8UScaledPack32:
		case Format::Type::A8B8G8R8SScaledPack32:
		case Format::Type::A8B8G8R8UIntPack32:
		case Format::Type::A8B8G8R8SIntPack32:
		case Format::Type::A8B8G8R8SRGBPack32:
		case Format::Type::A2R10G10B10UNormPack32:
		case Format::Type::A2R10G10B10SNormPack32:
		case Format::Type::A2R10G10B10UScaledPack32:
		case Format::Type::A2R10G10B10SScaledPack32:
		case Format::Type::A2R10G10B10UIntPack32:
		case Format::Type::A2R10G10B10SIntPack32:
		case Format::Type::A2B10G10R10UNormPack32:
		case Format::Type::A2B10G10R10SNormPack32:
		case Format::Type::A2B10G10R10UScaledPack32:
		case Format::Type::A2B10G10R10SScaledPack32:
		case Format::Type::A2B10G10R10UIntPack32:
		case Format::Type::A2B10G10R10SIntPack32:
		case Format::Type::R16G16B16A16UNorm:
		case Format::Type::R16G16B16A16SNorm:
		case Format::Type::R16G16B16A16UScaled:
		case Format::Type::R16G16B16A16SScaled:
		case Format::Type::R16G16B16A16UInt:
		case Format::Type::R16G16B16A16SInt:
		case Format::Type::R16G16B16A16SFloat:
		case Format::Type::R32G32B32A32UInt:
		case Format::Type::R32G32B32A32SInt:
		case Format::Type::R32G32B32A32SFloat:
		case Format::Type::R64G64B64A64UInt:
		case Format::Type::R64G64B64A64SInt:
		case Format::Type::R64G64B64A64SFloat:
			return 4;
		case Format::Type::BC1RGBUNormBlock:
		case Format::Type::BC1RGBSRGBBlock:
		case Format::Type::BC1RGBAUNormBlock:
		case Format::Type::BC1RGBASRGBBlock:
		case Format::Type::BC2UNormBlock:
		case Format::Type::BC2SRGBBlock:
		case Format::Type::BC3UNormBlock:
		case Format::Type::BC3SRGBBlock:
		case Format::Type::BC4UNormBlock:
		case Format::Type::BC4SNormBlock:
		case Format::Type::BC5UNormBlock:
		case Format::Type::BC5SNormBlock:
		case Format::Type::BC6HUFloatBlock:
		case Format::Type::BC6HSFloatBlock:
		case Format::Type::BC7UNormBlock:
		case Format::Type::BC7SRGBBlock:
		case Format::Type::ETC2R8G8B8UNormBlock:
		case Format::Type::ETC2R8G8B8SRGBBlock:
		case Format::Type::ETC2R8G8B8A1UNormBlock:
		case Format::Type::ETC2R8G8B8A1SRGBBlock:
		case Format::Type::ETC2R8G8B8A8UNormBlock:
		case Format::Type::ETC2R8G8B8A8SRGBBlock:
		case Format::Type::EACR11UNormBlock:
		case Format::Type::EACR11SNormBlock:
		case Format::Type::EACR11G11UNormBlock:
		case Format::Type::EACR11G11SNormBlock:
		case Format::Type::ASTC4x4UNormBlock:
		case Format::Type::ASTC4x4SRGBBlock:
		case Format::Type::ASTC5x4UNormBlock:
		case Format::Type::ASTC5x4SRGBBlock:
		case Format::Type::ASTC5x5UNormBlock:
		case Format::Type::ASTC5x5SRGBBlock:
		case Format::Type::ASTC6x5UNormBlock:
		case Format::Type::ASTC6x5SRGBBlock:
		case Format::Type::ASTC6x6UNormBlock:
		case Format::Type::ASTC6x6SRGBBlock:
		case Format::Type::ASTC8x5UNormBlock:
		case Format::Type::ASTC8x5SRGBBlock:
		case Format::Type::ASTC8x6UNormBlock:
		case Format::Type::ASTC8x6SRGBBlock:
		case Format::Type::ASTC8x8UNormBlock:
		case Format::Type::ASTC8x8SRGBBlock:
		case Format::Type::ASTC10x5UNormBlock:
		case Format::Type::ASTC10x5SRGBBlock:
		case Format::Type::ASTC10x6UNormBlock:
		case Format::Type::ASTC10x6SRGBBlock:
		case Format::Type::ASTC10x8UNormBlock:
		case Format::Type::ASTC10x8SRGBBlock:
		case Format::Type::ASTC10x10UNormBlock:
		case Format::Type::ASTC10x10SRGBBlock:
		case Format::Type::ASTC12x10UNormBlock:
		case Format::Type::ASTC12x10SRGBBlock:
		case Format::Type::ASTC12x12UNormBlock:
		case Format::Type::ASTC12x12SRGBBlock:
		default:
			throw type_error::create("invalid enum after call channel()");
		}
	}
}