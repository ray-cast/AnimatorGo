SET(LIB_OUTNAME hal)

SET(HEADER_PATH ${OCTOON_PATH_HEADER}/${LIB_OUTNAME})
SET(SOURCE_PATH ${OCTOON_PATH_SOURCE}/octoon-core/${LIB_OUTNAME})

OPTION(OCTOON_FEATURE_HAL_USE_OPENGL20 "On for enable off for disable" ON)
OPTION(OCTOON_FEATURE_HAL_USE_OPENGL30 "On for enable off for disable" ON)
OPTION(OCTOON_FEATURE_HAL_USE_OPENGL32 "On for enable off for disable" ON)
OPTION(OCTOON_FEATURE_HAL_USE_OPENGL33 "On for enable off for disable" ON)
OPTION(OCTOON_FEATURE_HAL_USE_OPENGL45 "On for enable off for disable" ON)
OPTION(OCTOON_FEATURE_HAL_USE_HLSL "On for enable off for disable" OFF)

IF(OCTOON_FEATURE_HAL_USE_OPENGL20)
	ADD_DEFINITIONS(-DOCTOON_FEATURE_HAL_USE_OPENGL20)
ENDIF()

IF(OCTOON_FEATURE_HAL_USE_OPENGL30)
	ADD_DEFINITIONS(-DOCTOON_FEATURE_HAL_USE_OPENGL30)
ENDIF()

IF(OCTOON_FEATURE_HAL_USE_OPENGL32 AND NOT OCTOON_BUILD_PLATFORM_EMSCRIPTEN)
	ADD_DEFINITIONS(-DOCTOON_FEATURE_HAL_USE_OPENGL32)
ENDIF()

IF(OCTOON_FEATURE_HAL_USE_OPENGL33 AND NOT OCTOON_BUILD_PLATFORM_EMSCRIPTEN AND NOT OCTOON_BUILD_PLATFORM_ANDROID)
	ADD_DEFINITIONS(-DOCTOON_FEATURE_HAL_USE_OPENGL33)
ENDIF()

IF(OCTOON_FEATURE_HAL_USE_OPENGL45)
	ADD_DEFINITIONS(-DOCTOON_FEATURE_HAL_USE_OPENGL45)
ENDIF()

IF(OCTOON_FEATURE_HAL_USE_HLSL)
	ADD_DEFINITIONS(-DOCTOON_FEATURE_HAL_USE_HLSL)
ENDIF()

SET(RENDERER_CORE
	${HEADER_PATH}/system_info.h
	${SOURCE_PATH}/system_info.cpp
	${HEADER_PATH}/render_state.h
	${SOURCE_PATH}/render_state.cpp
	${HEADER_PATH}/uniform_holder.h
	${SOURCE_PATH}/uniform_holder.cpp
	${HEADER_PATH}/graphics_context.h
	${SOURCE_PATH}/graphics_context.cpp
	${HEADER_PATH}/graphics_data.h
	${SOURCE_PATH}/graphics_data.cpp
	${HEADER_PATH}/graphics_descriptor.h
	${SOURCE_PATH}/graphics_descriptor.cpp
	${HEADER_PATH}/graphics_device.h
	${SOURCE_PATH}/graphics_device.cpp
	${HEADER_PATH}/graphics_device_property.h
	${SOURCE_PATH}/graphics_device_property.cpp
	${HEADER_PATH}/graphics_input_layout.h
	${SOURCE_PATH}/graphics_input_layout.cpp
	${HEADER_PATH}/graphics_pipeline.h
	${SOURCE_PATH}/graphics_pipeline.cpp
	${HEADER_PATH}/graphics_resource.h
	${SOURCE_PATH}/graphics_resource.cpp
	${HEADER_PATH}/graphics_sampler.h
	${SOURCE_PATH}/graphics_sampler.cpp
	${HEADER_PATH}/graphics_shader.h
	${SOURCE_PATH}/graphics_shader.cpp
	${HEADER_PATH}/graphics_swapchain.h
	${SOURCE_PATH}/graphics_swapchain.cpp
	${HEADER_PATH}/graphics_system.h
	${SOURCE_PATH}/graphics_system.cpp
	${HEADER_PATH}/graphics_texture.h
	${SOURCE_PATH}/graphics_texture.cpp
	${HEADER_PATH}/graphics_types.h
	${HEADER_PATH}/graphics_framebuffer.h
	${SOURCE_PATH}/graphics_framebuffer.cpp
)
SOURCE_GROUP("hal\\common" FILES ${RENDERER_CORE})

SET(RENDERER_LIST ${RENDERER_CORE})

FILE(GLOB RENDERER_GL20_HEADER "${SOURCE_PATH}/OpenGL 20/*.h")
FILE(GLOB RENDERER_GL20_SOURCE "${SOURCE_PATH}/OpenGL 20/*.cpp")
FILE(GLOB RENDERER_GL30_HEADER "${SOURCE_PATH}/OpenGL 30/*.h")
FILE(GLOB RENDERER_GL30_SOURCE "${SOURCE_PATH}/OpenGL 30/*.cpp")
FILE(GLOB RENDERER_GL32_HEADER "${SOURCE_PATH}/OpenGL 32/*.h")
FILE(GLOB RENDERER_GL32_SOURCE "${SOURCE_PATH}/OpenGL 32/*.cpp")
FILE(GLOB RENDERER_GL33_HEADER "${SOURCE_PATH}/OpenGL 33/*.h")
FILE(GLOB RENDERER_GL33_SOURCE "${SOURCE_PATH}/OpenGL 33/*.cpp")
FILE(GLOB RENDERER_GL45_HEADER "${SOURCE_PATH}/OpenGL 45/*.h")
FILE(GLOB RENDERER_GL45_SOURCE "${SOURCE_PATH}/OpenGL 45/*.cpp")
FILE(GLOB RENDERER_GL_COMMON_HEADER "${SOURCE_PATH}/OpenGL Common/*.h")
FILE(GLOB RENDERER_GL_COMMON_SOURCE "${SOURCE_PATH}/OpenGL Common/*.cpp")

SET(RENDERER_GL20 ${RENDERER_GL20_HEADER} ${RENDERER_GL20_SOURCE})
SET(RENDERER_GL30 ${RENDERER_GL30_HEADER} ${RENDERER_GL30_SOURCE})
SET(RENDERER_GL32 ${RENDERER_GL32_HEADER} ${RENDERER_GL32_SOURCE})
SET(RENDERER_GL33 ${RENDERER_GL33_HEADER} ${RENDERER_GL33_SOURCE})
SET(RENDERER_GL45 ${RENDERER_GL45_HEADER} ${RENDERER_GL45_SOURCE})
SET(RENDERER_GL_COMMON ${RENDERER_GL_COMMON_HEADER} ${RENDERER_GL_COMMON_SOURCE})

IF(NOT OCTOON_BUILD_PLATFORM_APPLE)
	LIST(REMOVE_ITEM RENDERER_GL_COMMON "${SOURCE_PATH}/OpenGL Common/nsgl_swapchain.h")
	LIST(REMOVE_ITEM RENDERER_GL_COMMON "${SOURCE_PATH}/OpenGL Common/nsgl_swapchain.mm")
ENDIF()

IF(NOT OCTOON_BUILD_PLATFORM_LINUX)
	LIST(REMOVE_ITEM RENDERER_GL_COMMON "${SOURCE_PATH}/OpenGL Common/x11_swapchain.h")
	LIST(REMOVE_ITEM RENDERER_GL_COMMON "${SOURCE_PATH}/OpenGL Common/x11_swapchain.cpp")
ENDIF()

IF(NOT OCTOON_BUILD_PLATFORM_WINDOWS)
	LIST(REMOVE_ITEM RENDERER_GL_COMMON "${SOURCE_PATH}/OpenGL Common/wgl_swapchain.h")
	LIST(REMOVE_ITEM RENDERER_GL_COMMON "${SOURCE_PATH}/OpenGL Common/wgl_swapchain.cpp")
ENDIF()

IF(NOT OCTOON_BUILD_PLATFORM_ANDROID AND NOT OCTOON_BUILD_PLATFORM_EMSCRIPTEN)
	LIST(REMOVE_ITEM RENDERER_GL_COMMON "${SOURCE_PATH}/OpenGL Common/egl_swapchain.h")
	LIST(REMOVE_ITEM RENDERER_GL_COMMON "${SOURCE_PATH}/OpenGL Common/egl_swapchain.cpp")
ENDIF()

SOURCE_GROUP("hal\\OpenGL 20" FILES ${RENDERER_GL20})
SOURCE_GROUP("hal\\OpenGL 30" FILES ${RENDERER_GL30})
SOURCE_GROUP("hal\\OpenGL 32" FILES ${RENDERER_GL32})
SOURCE_GROUP("hal\\OpenGL 33" FILES ${RENDERER_GL33})
SOURCE_GROUP("hal\\OpenGL 45" FILES ${RENDERER_GL45})
SOURCE_GROUP("hal\\OpenGL Common" FILES ${RENDERER_GL_COMMON})

IF(OCTOON_FEATURE_HAL_USE_OPENGL20)
	LIST(APPEND RENDERER_LIST ${RENDERER_GL20})
ENDIF()

IF(OCTOON_FEATURE_HAL_USE_OPENGL30)
	LIST(APPEND RENDERER_LIST ${RENDERER_GL30})
ENDIF()

IF(OCTOON_FEATURE_HAL_USE_OPENGL32 AND NOT OCTOON_BUILD_PLATFORM_EMSCRIPTEN AND NOT OCTOON_BUILD_PLATFORM_ANDROID)
	LIST(APPEND RENDERER_LIST ${RENDERER_GL32})
ENDIF()

IF(OCTOON_FEATURE_HAL_USE_OPENGL33 AND NOT OCTOON_BUILD_PLATFORM_EMSCRIPTEN AND NOT OCTOON_BUILD_PLATFORM_ANDROID)
	LIST(APPEND RENDERER_LIST ${RENDERER_GL33})
ENDIF()

IF(OCTOON_FEATURE_HAL_USE_OPENGL45 AND NOT OCTOON_BUILD_PLATFORM_EMSCRIPTEN AND NOT OCTOON_BUILD_PLATFORM_ANDROID)
	LIST(APPEND RENDERER_LIST ${RENDERER_GL45})
ENDIF()

LIST(APPEND RENDERER_LIST ${RENDERER_GL_COMMON})

IF(OCTOON_BUILD_PLATFORM_APPLE)
	SET_SOURCE_FILES_PROPERTIES(${RENDERER_LIST} PROPERTIES LANGUAGE CXX)
ENDIF()